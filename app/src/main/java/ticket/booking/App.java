/*
 * This source file was generated by the Gradle 'init' task
 */
package ticket.booking;

import ticket.booking.entities.Train;
import ticket.booking.entities.User;
import ticket.booking.services.UserBookingService;
import ticket.booking.utils.UserServiceUtil;

import java.io.IOException;
import java.util.*;


public class App {

    public static void main(String[] args) throws IOException {

        System.out.println("Running Train Booking System");

        Scanner sc = new Scanner(System.in);

        int option = 0;

        UserBookingService userBookingService;

        try {
            userBookingService = new UserBookingService();
        } catch (Exception e) {
            System.out.println("There is something wrong: " + e.getMessage());
            e.printStackTrace();
            return;
        }

        while(option!=7) {
            System.out.println("Choose option");
            System.out.println("1. Sign up");
            System.out.println("2. Login");
            System.out.println("3. Fetch Bookings");
            System.out.println("4. Search Trains");
            System.out.println("5. Book a Seat");
            System.out.println("6. Cancel my Booking");
            System.out.println("7. Exit the App");

            option = sc.nextInt();
            sc.nextLine(); // consume the leftover newline

            Train trainSelectedForBooking = new Train();

            switch (option) {
                case 1:
                    System.out.println("Enter the username to signup: ");
                    String username = sc.nextLine();
                    System.out.println("Enter the password to signup: ");
                    String password = sc.nextLine();

                    User userToSignup = new User(username, password, UserServiceUtil.hashPassword(password), new ArrayList<>(), UUID.randomUUID().toString());
                    userBookingService.signUp(userToSignup);
                    break;

                case 2:
                    System.out.println("Enter the username to signup: ");
                    String usernameToLogin = sc.nextLine();
                    System.out.println("Enter the password to signup: ");
                    String passwordToLogin = sc.nextLine();

                    User userToLogin = new User(usernameToLogin, passwordToLogin, UserServiceUtil.hashPassword(passwordToLogin), new ArrayList<>(), UUID.randomUUID().toString());
                    userBookingService.loginUser();
                    break;

                case 3:
                    System.out.println("Fetching your bookings, Please wait!");
                    userBookingService.fetchBookings();

                case 4:
                    System.out.println("Please type the source station: ");
                    String source = sc.nextLine();
                    System.out.println("Please type the destination station: ");
                    String destination = sc.nextLine();



                    System.out.println("Searching for trains, Please wait!");
                    List<Train> trainList = userBookingService.getTrains(source, destination);
                    for(int i=0; i<trainList.size(); i++) {
                        System.out.println(trainList.get(i).getTrainInfo());
                    }
                    System.out.println("Select a train out of these trains");
                    trainSelectedForBooking = trainList.get(sc.nextInt());
                    break;

                case 5:
                    System.out.println("Select a seat out of these seats");
                    List<List<Integer>> seats = userBookingService.fetchSeats(trainSelectedForBooking);

                    for(List<Integer> row : seats) {
                        for(Integer seat : row) {
                            System.out.print(seat + " ");
                        }
                        System.out.println();
                    }

                    System.out.println("Please select the seat by typing the row and column: ");
                    System.out.println("Enter the row: ");
                    int row = sc.nextInt();
                    System.out.println("Enter the column: ");
                    int col = sc.nextInt();
                    System.out.println("Booking your seat Please wait!");
                    Boolean booked = userBookingService.bookTrainSeat(trainSelectedForBooking, row, col);
                    if(booked.equals(Boolean.TRUE)) {
                        System.out.println("Seat booked successfully");
                    } else {
                        System.out.println("Seat booking failed");
                    }
                    break;

                case 6:
                    System.out.println("Cancelling out your booking Please wait!");

                    userBookingService.cancelBooking();
                    break;

                default:
                    break;
            }
        }
    }
}
